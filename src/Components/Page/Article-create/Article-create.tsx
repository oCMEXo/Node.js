import { useState, useRef } from "react";
import { Link, useNavigate } from "react-router-dom";
import "./Article-create.css";

export default function CreateArticlePage() {
    const navigate = useNavigate();
    const [title, setTitle] = useState("");
    const [category, setCategory] = useState("Tutorial");
    const [excerpt, setExcerpt] = useState("");
    const [content, setContent] = useState("");
    const [author, setAuthor] = useState("");
    const editorRef = useRef(null);

    const categories = ["Tutorial", "Advanced", "Design", "News", "Opinion"];

    const handleFormat = (command, value) => {
        // execCommand —É—Å—Ç–∞—Ä–µ–ª, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–µ–º–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
        if (document && typeof document.execCommand === "function") {
            document.execCommand(command, false, value);
            editorRef.current?.focus();
        }
    };

    const handleSubmit = (e) => {
        e.preventDefault();

        const articleData = {
            title: title.trim(),
            category,
            excerpt: excerpt.trim(),
            content: editorRef.current?.innerHTML || "",
            author: author.trim(),
            date: new Date().toISOString().split("T")[0],
        };

        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        if (!articleData.title || !articleData.author || !articleData.excerpt || !articleData.content) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!");
            return;
        }

        console.log("Article submitted:", articleData);
        alert("‚úÖ –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! (–¥–µ–º–æ-–≤–µ—Ä—Å–∏—è –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞)");

        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        setTitle("");
        setExcerpt("");
        setAuthor("");
        setContent("");
        if (editorRef.current) editorRef.current.innerHTML = "";

        // –ü–µ—Ä–µ—Ö–æ–¥ –æ–±—Ä–∞—Ç–Ω–æ –∫ —Å–ø–∏—Å–∫—É —Å—Ç–∞—Ç–µ–π
        navigate("/");
    };

    const handleEditorInput = () => {
        if (editorRef.current) {
            setContent(editorRef.current.innerHTML);
        }
    };

    return (
        <div className="create-article-container">
            <div className="create-article-header">
                <Link to="/" className="back-link">
                    ‚Üê –û—Ç–º–µ–Ω–∏—Ç—å
                </Link>
                <div>
                    <h1>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏</h1>
                    <p className="page-subtitle">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏</p>
                </div>
            </div>

            <form onSubmit={handleSubmit} className="article-form">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="form-section">
                    <div className="form-group">
                        <label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ *</label>
                        <input
                            id="title"
                            type="text"
                            value={title}
                            onChange={(e) => setTitle(e.target.value)}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏..."
                            required
                            className="form-input"
                        />
                    </div>

                    <div className="form-row">
                        <div className="form-group">
                            <label htmlFor="author">–ò–º—è –∞–≤—Ç–æ—Ä–∞ *</label>
                            <input
                                id="author"
                                type="text"
                                value={author}
                                onChange={(e) => setAuthor(e.target.value)}
                                placeholder="–í–∞—à–µ –∏–º—è..."
                                required
                                className="form-input"
                            />
                        </div>

                        <div className="form-group">
                            <label htmlFor="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</label>
                            <select
                                id="category"
                                value={category}
                                onChange={(e) => setCategory(e.target.value)}
                                required
                                className="form-select"
                            >
                                {categories.map((cat) => (
                                    <option key={cat} value={cat}>
                                        {cat}
                                    </option>
                                ))}
                            </select>
                        </div>
                    </div>

                    <div className="form-group">
                        <label htmlFor="excerpt">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ *</label>
                        <textarea
                            id="excerpt"
                            value={excerpt}
                            onChange={(e) => setExcerpt(e.target.value)}
                            placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π —Å—Ç–∞—Ç—å–∏..."
                            required
                            className="form-textarea"
                            rows={3}
                        />
                    </div>
                </div>

                {/* –†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
                <div className="form-section">
                    <label>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ *</label>

                    <div className="editor-toolbar">
                        <div className="toolbar-group">
                            <button
                                type="button"
                                onClick={() => handleFormat("bold")}
                                className="toolbar-button"
                                title="–ñ–∏—Ä–Ω—ã–π"
                            >
                                <strong>B</strong>
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("italic")}
                                className="toolbar-button"
                                title="–ö—É—Ä—Å–∏–≤"
                            >
                                <em>I</em>
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("underline")}
                                className="toolbar-button"
                                title="–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π"
                            >
                                <u>U</u>
                            </button>
                        </div>

                        <div className="toolbar-divider"></div>

                        <div className="toolbar-group">
                            <button
                                type="button"
                                onClick={() => handleFormat("formatBlock", "h2")}
                                className="toolbar-button"
                                title="–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2"
                            >
                                H2
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("formatBlock", "h3")}
                                className="toolbar-button"
                                title="–ó–∞–≥–æ–ª–æ–≤–æ–∫ 3"
                            >
                                H3
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("formatBlock", "p")}
                                className="toolbar-button"
                                title="–ü–∞—Ä–∞–≥—Ä–∞—Ñ"
                            >
                                P
                            </button>
                        </div>

                        <div className="toolbar-divider"></div>

                        <div className="toolbar-group">
                            <button
                                type="button"
                                onClick={() => handleFormat("insertUnorderedList")}
                                className="toolbar-button"
                                title="–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫"
                            >
                                ‚Ä¢ –°–ø–∏—Å–æ–∫
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("insertOrderedList")}
                                className="toolbar-button"
                                title="–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫"
                            >
                                1. –°–ø–∏—Å–æ–∫
                            </button>
                        </div>

                        <div className="toolbar-divider"></div>

                        <div className="toolbar-group">
                            <button
                                type="button"
                                onClick={() => {
                                    const url = prompt("–í–≤–µ–¥–∏—Ç–µ URL:");
                                    if (url) handleFormat("createLink", url);
                                }}
                                className="toolbar-button"
                                title="–í—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É"
                            >
                                üîó
                            </button>
                            <button
                                type="button"
                                onClick={() => handleFormat("removeFormat")}
                                className="toolbar-button"
                                title="–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
                            >
                                ‚úï
                            </button>
                        </div>
                    </div>

                    <div
                        ref={editorRef}
                        contentEditable
                        onInput={handleEditorInput}
                        className="wysiwyg-editor"
                        tabIndex={0}
                        suppressContentEditableWarning={true}
                        data-placeholder="–ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –∑–¥–µ—Å—å..."
                    ></div>
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ */}
                <div className="form-actions">
                    <Link to="/" className="cancel-button">
                        –û—Ç–º–µ–Ω–∏—Ç—å
                    </Link>
                    <button
                        type="submit"
                        className="submit-button"
                        disabled={!title || !author || !excerpt || !content}
                    >
                        –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é
                    </button>
                </div>
            </form>
        </div>
    );
}
